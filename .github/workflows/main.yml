name: Build
on:
  # Manual Run.
  workflow_dispatch:  
  
  # On a push to a branch or tag.
  push:
    branches: [ main, 'develop/**' ]

  # On a PR to a branch or tag.
  pull_request:
    branches: [ main ]

  # On a release.
  release:
    types:
      - published

jobs:
  build:

    name: build-${{matrix.os}}

    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    env:
        DOTNET_NOLOGO: true
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}           

    steps:
    - name: Checkout      
      uses: actions/checkout@v2
      with: 
          fetch-depth: 0

    - name: Restore
      run: dotnet restore --use-lock-file

    - name: Build
      run: dotnet build --configuration Release --no-restore --verbosity minimal

    - name: Pack
      run: dotnet pack --configuration Release --no-restore --no-build --verbosity minimal --output ./artifacts

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.os}}
        path: ./artifacts

  deploy-packages-github:

    needs: build

    if: github.ref == 'refs/heads/main' || github.event_name == 'release'

    runs-on: windows-latest

    env:
        DOTNET_NOLOGO: true
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

    steps:      
    - name: Download Artifacts 
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-latest
        path: ./artifacts

    - name: Add GitHub Packages Source
      run: dotnet nuget add source https://nuget.pkg.github.com/shyn/index.json --name GitHub --username shyn --password ${{secrets.GITHUB_TOKEN}} --store-password-in-clear-text
      
    - name: Push to GitHub Packages
      run: dotnet nuget push .\artifacts\**\*.nupkg --source GitHub --skip-duplicate --no-symbols true
      env:
        DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLE: false   

  deploy-packages-nuget:

    needs: deploy-packages-github

    if: github.event_name == 'release'

    runs-on: windows-latest

    env:
        DOTNET_NOLOGO: true
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

    steps:      
    - name: Download Artifacts 
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-latest
        path: ./artifacts

    - name: Push to NuGet
      run: dotnet nuget push --source https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_AUTH_TOKEN}} .\artifacts\**\*.nupkg --skip-duplicate --no-symbols true
      env:
        DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLE: false
